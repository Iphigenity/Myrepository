<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns="http://www.springframework.org/schema/beans" 
		xmlns:tx="http://www.springframework.org/schema/tx" 
		xmlns:aop="http://www.springframework.org/schema/aop" 
		xmlns:contex="http://www.springframework.org/schema/context" 
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd ">
	
	<!-- 从配置文件中读取数据库连接信息 -->
	<contex:property-placeholder location="classpath:Driversetup.properties" />
	<!-- 引入C3p0连接池 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
		<property name="DriverClass" value="${jdbc.DriverClass}" ></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" ></property>
		<property name="user" value="${jdbc.jdbcUsername}" ></property>
		<property name="password" value="${jdbc.jdbcPassword}" ></property>
	</bean>
	
	<!-- 配置核心事务管理器 -->
	<bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager" >
			<!-- 将sessionFactory注入transactionManager -->
			<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
	
	<!-- 配置通知 -->
	<tx:advice id="advisor" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<!--  -->
			<tx:method name="persist*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<!-- 修改 -->
			<tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="delete" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
			
			<tx:method name="regist*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 将通知织入 -->
	<aop:config>
		<!-- 配置切点表达式 -->
		<aop:pointcut expression="execution(* cn.QQWeb.service.impl.*ServiceImpl.*(..))" id="txAd"/>
		<!-- 织入通知 -->
		<aop:advisor advice-ref="advisor" pointcut-ref="txAd" />
	</aop:config>
	
	<!-- 开启注解管理事务 -->
	<tx:annotation-driven/>
	
	
	<!-- 将sessionFactory配置到spring容器中 -->
	<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" >
		<!-- 将连接池注入sessionFactory -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置hibernate -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		
		</property>
		<!-- 引入orm元数据 -->
		<property name="mappingDirectoryLocations" value="classpath:cn/QQWeb/domain" ></property>
	</bean>
	
	<!-- 配置userAction -->
	<bean name="userAction" class="cn.QQWeb.web.action.userAction" scope="prototype">
		<property name="service" ref="userService"></property>
	</bean>
	<!-- 配置userService -->
	<bean name="userService" class="cn.QQWeb.service.impl.userServiceImpl" >
		<!-- 为Service注入dao -->
		<property name="dao" ref="userDao"></property>
	</bean>
	
	<!-- 配置userdao -->
	<bean name="userDao" class="cn.QQWeb.dao.impl.userDaoImpl" >
		<!-- 为dao注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
	<!-- 配置CustomerAction -->
	
	<bean name="customerAction" class="cn.QQWeb.web.action.CustomerAction" scope="prototype">
		<property name="service" ref="CustomerService"></property>
	</bean>
	<!-- 配置CustomerService -->
	<bean name="CustomerService" class="cn.QQWeb.service.impl.CustomerServiceImpl" >
		<!-- 为Service注入dao -->
		<property name="dao" ref="Customerdao"></property>
	</bean>
	
	<!-- 配置Customerdao -->
	<bean name="Customerdao" class="cn.QQWeb.dao.impl.CustomerDaoImpl" >
		<!-- 为dao注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
	<!-- 配置BaseDictAvtion -->
	
	<bean name="BaseDictAvtion" class="cn.QQWeb.web.action.BaseDictAvtion" scope="prototype">
		<property name="service" ref="BaseDictService"></property>
	</bean>
	<!-- 配置BaseDictService -->
	<bean name="BaseDictService" class="cn.QQWeb.service.impl.BaseDictServiceImpl" >
		<!-- 为Service注入dao -->
		<property name="dao" ref="BaseDictDao"></property>
	</bean>
	
	<!-- 配置BaseDictDao -->
	<bean name="BaseDictDao" class="cn.QQWeb.dao.impl.BaseDictDaoImpl" >
		<!-- 为dao注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
	<!-- 配置LinkManAction -->
	
	<bean name="linkManAction" class="cn.QQWeb.web.action.LinkManAction" scope="prototype">
		<property name="service" ref="LinkManService"></property>
	</bean>
	<!-- 配置CustomerService -->
	<bean name="LinkManService" class="cn.QQWeb.service.impl.LinkManServiceImpl" >
		<!-- 为Service注入dao -->
		<property name="dao" ref="LinkManDao"></property>
	</bean>
	
	<!-- 配置LinkManDao -->
	<bean name="LinkManDao" class="cn.QQWeb.dao.impl.LinkManDaoImpl" >
		<!-- 为dao注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
</beans>
